What is this?

Delve is a roguelike fantasy CRPG in tradition of nethack, Angband, and others. You will create a character who explores a deep dungeon seeking to defeat a terrible evil lurking in the depths.

Your first character will probably not succeed, and your second may not either. Delve, like many roguelikes, features permadeath: if your character is killed you will not be able to return to a previous save point and will have to begin a new game. But on the bright side, each time you create a character you will be presented with freshly generated world. The dungeon levels, the world above, and the village where you begin will all be a little bit different.
#
Commands

Delve is largely keyboard-driven and has many commands to control what your character is doing. You'll need to learn the movement keys. You may move around around using the clssic rogue/VIM-style keys, the arrow keys, or the number pad.
     
          North      Northwest Northeast
           |                 \  /
    West-hjkl-East           y u          b n
          |                              /   \
         South                   Southwest    Southeast

You can 'run' by pressing shift and any of the movement keys and your character will move automatically as far as they are able, stopping if they reach something interesting like items on the dungeon floor, or if a monster comes into view.

If you attempt to move into a closed door, you will automatically open it, and bumping into a monster makes a melee attack against them.

Other commands you'll need to know:


a   Apply/Use/Activate an item in your inventory. Ie., a 
    potion, scroll, torch. 
c   Close a door.
C   Chat with an NPC.
d   Drop an item in your inventory.
e   Equip/Ready a weapon or piece of armour. Hit e again 
    to un-equip the item.
E   Enter a dungeon, which are indicated on the world map 
    by a Õˆ symbol
f   Fire a bow. You can select a target via the movement
    keys or by tabbing through visible targets. The game  
    will remember the last monster you targetted. If you 
    have a bow equiped, it will be automatically selected. 
    Note that you have unlimited ammunition but may also 
    find magical or special consumable arrows.
F   Bash open a locked or closed door.
i   Iventory: view what you are currently carrying
o   Open a door. You will also automatically open doors by 
    bumping into them.
t   Throw an item at a location. Your range will depend on 
    your character's strength. After selecting the item 
    you wish to throw, you'll select a target via the 
    movement keys, or hit TAB to cycle through the 
    monsters on screen. The game will also remember the 
    last monster you targetted.
,   Pick up items from the ground.
>   Use a downward staircase.
<   Use an updward staircase.
@   View your character's details.
M   View the full map of the dungeon level you are on.
x   Examine interesting features on screen. Hit TAB to 
    cycle through monsters and items that you can see to 
    learn some information about them.
S   Save and exit. 
Q   Quit without saving. Please remember this will 
    abandon your current character.
# 
License

Dana's Delve is released under the Creative Commons CC0 v1.0 license. To greatest extentb I legally can, I'd like Delve's code to be in the Public Domain.

You should have received a copy of the license along with the game (a file called COPYING), but if not you may read the CC0 license here: http://creativecommons.org/publicdomain/zero/1.0/.

Delve's source code is hosted at GitHub: https://github.com/DanaL/Yarl2.

Delve also uses some additional resources created by others. I have included the DejaVu Sans Mono font (see https://dejavu-fonts.github.io for licensing details) and depending on the build of Delve, the game uses BearLibTerminal (https://github.com/tommyettinger/BearLibTerminal) via the DaceKonn.BearLibNET package on NuGet (licensed under the MIT license) (https://github.com/DaceKonn/BearLibNET) or the SDL 2.0 library. (https://www.libsdl.org). I've been using Ethan Lee's C# SDL wrapper, which are included in the /SDL folder. (I can't remember why I'm doing it this way instead of using NuGet -- it was workaround to some problem I was having)
#
